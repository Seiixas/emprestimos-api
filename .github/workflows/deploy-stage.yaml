name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Generate .env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "REDIS_URL"=${{ secrets.REDIS_URL }} >> .env
          echo "PORT"=${{ secrets.PORT }} >> .env

      - name: Upload .env file to EC2
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: .env
          target: /home/ubuntu/nest/.env

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            # Set the working directory
            WORK_DIR="/home/ubuntu/nest"
            
            # Create directory if it does not exist
            mkdir -p "$WORK_DIR"
            
            # Change to the working directory
            cd "$WORK_DIR" || exit 1
            
            # Clone the repository if it does not exist
            if [ ! -d ".git" ]; then
              git clone https://github.com/Seiixas/emprestimos-api.git .
            fi
            
            # Ensure the repository is up to date
            git fetch origin
            git reset --hard origin/main
            
            # Check if package.json exists
            if [ ! -f "package.json" ]; then
              echo "Error: package.json not found!"
              exit 1
            fi
            
            # Install dependencies and build the application
            npm install
            npm run build


            
            # Restart the app using PM2
            pm2 restart all || echo "No PM2 process found to restart."
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          PORT: ${{ secrets.PORT }}
